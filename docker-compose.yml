version: '3.8'

services:
  app:
    build: . # Buduje obraz z Dockerfile w bieżącym katalogu
    container_name: library-system-app
    ports:
      - "8080:8080" # Mapuje port 8080 hosta na port 8080 kontenera
    depends_on:
      db:
        condition: service_healthy # Czeka, aż baza danych będzie gotowa
    environment:
      # ZMIENIONA NAZWA BAZY DANYCH W URL
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/library_system_db
      # 'db' to nazwa serwisu bazy danych zdefiniowana poniżej
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=admin # Przykładowe hasło, możesz zmienić
      - SPRING_JPA_HIBERNATE_DDL_AUTO=validate

  db:
    image: postgres:15-alpine # Używa oficjalnego obrazu PostgreSQL
    container_name: library-system-db
    ports:
      - "5432:5432" # Opcjonalnie: mapuje port bazy danych na hosta, jeśli chcesz mieć do niej dostęp z zewnątrz
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin # Musi być takie samo jak SPRING_DATASOURCE_PASSWORD w serwisie 'app'
      # ZMIENIONA NAZWA BAZY DANYCH
      - POSTGRES_DB=library_system_db # Nazwa bazy danych, która zostanie utworzona
    volumes:
      - postgres_data:/var/lib/postgresql/data # Utrwala dane bazy danych
    healthcheck:
      # ZMIENIONA NAZWA BAZY DANYCH W HEALTHCHECK
      test: ["CMD-SHELL", "pg_isready -U postgres -d library_system_db"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: # Definiuje nazwany wolumen dla trwałości danych PostgreSQL